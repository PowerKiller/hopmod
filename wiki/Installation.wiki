#summary Prerequisite and installation details for the latest version of Hopmod (branches/ng) for the latest version of Cube 2:Sauerbraten.
#labels Phase-Deploy,manual,Phase-Requirements

== Operating System ==

You will need to have Linux running if you want to use Hopmod, this is the
operating system Hopmod was developed and tested on.

== C Library Dependencies ==

 * GeoIp ([http://www.maxmind.com/app/c Download])
 * SQLite3 ([http://www.sqlite.org/download.html Download])

All the other libraries used by Hopmod are included with the source distribution.

== Perl modules required by the IRC bot ==

=== Base Bot ===

 * POE::Component::IRC::State
 * POE::Component::IRC::Plugin::Connector
 * POE::Component::IRC::Plugin::AutoJoin
 * POE::Component::IRC::Plugin::FollowTail
 * Config::Auto
 * LWP::UserAgent
 * HTTP::Request

=== Player Locator Module ===

 * IO::Socket
 * threads
 * threads::shared
 * LWP::Simple

== Requirements for the Scoreboard ==

 * PHP >= 5.3.0RC1<br>

== Getting the Source Code ==

[http://code.google.com/p/hopmod/source/checkout SVN checkout]

== Building Hopmod ==

=== Create the build environment ===

Hopmod comes distributed with the source code for a non-standard build tool
called Boost Jam which is used to compile and install everything, for a fresh
copy of Hopmod you will need to compile this tool before you can compile Hopmod.

{{{
./buildtools.sh
./autogen.sh
}}}

The first command compiles and installs Boost Jam, the other command generates the configure script.

If configure.ac changes then run `autoconf` or `./autogen.sh` to regenerate the configure script.

=== Compile and installation ===

{{{
./configure
make
}}}

These are the two commands you run everytime to compile the latest revision of
Hopmod. Installation is automatic, with the compiled server program and 
libraries copied to `./bin` directory and the script modules copied to
the `./script/package` directory.

== Configuration ==

The server configuration file exists at `./conf/server.conf` and is written
in CubeScript.

== Startup and Shutdown ==

{{{
./bin/server
}}}

To immediately shutdown the server:

{{{
./bin/server stop
}}}

In the event of a crash the named pipe `serverexec` will be left undeleted. The
server script uses the named pipe to detect if the server is running, when a
crash occurs it will wrongfully detect the server as running when you use the
script to startup. To resolve this issue simply delete the named pipe file.